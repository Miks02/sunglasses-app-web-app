@using SunglassesApp.Models;
@using SunglassesApp.Helpers;
@model IEnumerable<Order>;
@{
    Layout = "_AdminLayout";
}


<div class="container my-5 text-light dark-gradient shadow rounded-3 pb-1 w-100">
    <h2 class="mb-4 pt-2">📩 Spisak porudžbina</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Trenutno nema sačuvanih porudžbina
        </div>
    }
    else
    {
        <table class="table table-hover text-light shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Kupac</th>
                    <th scope="col">Cena porudžbine<meta name="viewport" content="width=device-width" /></th>
                    <th scope="col">Status</th>
                    <th scope="col">Datum poručivanja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr onclick="window.location.href='@Url.Action("OrderDetails", "Order", new {Area = "Admin", id = order.Id })'" style="cursor:pointer;">
                        <th scope="row">@order.Id</th>
                        <th>@order.User.UserName</th>
                        <td>@order.OrderPrice</td>
                        <td>
                            @{
                                switch (order.Status)
                                {
                                    case OrderStatus.Pending:
                                        <span class="badge bg-warning text-dark shadow">@EnumExtensions.GetDisplayName(order.Status)</span>
                                        break;
                                    case OrderStatus.Shipped:
                                        <span class="badge bg-info text-dark shadow">@EnumExtensions.GetDisplayName(order.Status)</span>
                                        break;
                                    case OrderStatus.Delivered:
                                        <span class="badge bg-success text-light shadow">@EnumExtensions.GetDisplayName(order.Status)</span>
                                        break;
                                    case OrderStatus.Cancelled:
                                        <span class="badge bg-danger text-light shadow">@EnumExtensions.GetDisplayName(order.Status)</span>
                                        break;
                                }
                            }


                        </td>
                        <td>@order.OrderDate.ToString("dd.MM.yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>

    }
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center fixed-top alert-dismissible mt-3 fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center fixed-top alert-dismissible mt-3 fade show">
        @TempData["ErrorMessage"]
    </div>
}


