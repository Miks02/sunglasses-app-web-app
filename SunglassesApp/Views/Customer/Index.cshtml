@using SunglassesApp.Models;
@using SunglassesApp.Helpers;
@using SunglassesApp.ViewModels;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model CatalogueViewModel

@{
    Layout = "_Layout";

    var products = Model.Products.ToList();

}


<div class="container-fluid p-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            
            <h4 class="mb-0 text-light">Pregled kataloga</h4>
            <div class="d-flex align-items-center">
                <form method="get" asp-controller="Customer" asp-action="Index" asp-route-filter="@Model.Filter" class="d-flex justify-content-end">
                @if (Model.Filter.Categories != null)
                {
                    foreach (var cat in Model.Filter.Categories)
                    {
                        <input type="hidden" name="Categories" value="@cat" />
                    }
                }
                @if (Model.Filter.Brands != null)
                {
                    foreach (var brand in Model.Filter.Brands)
                    {
                        <input type="hidden" name="Brands" value="@brand" />
                    }
                }
                @if (Model.Filter.Genders != null)
                {
                    foreach (var gender in Model.Filter.Genders)
                    {
                        <input type="hidden" name="Genders" value="@gender" />
                    }
                }
                @if (Model.Filter.FrameTypes != null)
                {
                    foreach (var frameType in Model.Filter.FrameTypes)
                    {
                        <input type="hidden" name="FrameTypes" value="@frameType" />
                    }
                }
                @if (Model.Filter.FrameColors != null)
                {
                    foreach (var frameColor in Model.Filter.FrameColors)
                    {
                        <input type="hidden" name="FrameColors" value="@frameColor" />
                    }
                }
                @if (Model.Filter.LensColors != null)
                {
                    foreach (var lensColor in Model.Filter.LensColors)
                    {
                        <input type="hidden" name="LensColors" value="@lensColor" />
                    }
                }
                @if (Model.Filter.UVProtections != null)
                {
                    foreach (var uv in Model.Filter.UVProtections)
                    {
                        <input type="hidden" name="UVProtections" value="@uv" />
                    }
                }


                <select name="sortOrder" class="form-select rounded-3 shadow" onchange="this.form.submit()">
                    <option value="default" selected="@(ViewBag.CurrentSort == null || ViewBag.CurrentSort == "default")">Podrazumevano</option>
                    <option value="price_asc" selected="@(ViewBag.CurrentSort == "price_asc")">Cena rastuće</option>
                    <option value="price_desc" selected="@(ViewBag.CurrentSort == "price_desc")">Cena opadajuće</option>
                    <option value="times_bought" selected="@(ViewBag.CurrentSort == "times_bought")">Najprodavaniji</option>
                </select>
            </form>
           
            </div>
        </div>

        <div class="row g-4">
          
            <div class="col-lg-3">
                <div class="filter-sidebar p-4 shadow-sm  overflow-scroll position-static">
                <form method="get" asp-controller="Customer" asp-route-sortOrder="default" asp-action="Index">
                    <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />

                    @if(!Model.Filter.IsEmpty)
                    {
                       
                        <div class="d-flex justify-content-center w-100">
                            <a class="btn btn-outline-success fw-bolder w-50 m-2" asp-controller="Customer" asp-action="Index">Resetuj filtere</a>
                        </div>
                    }

                    <div class="filter-group">
                        
                        <h6 class="mb-3">Kategorije</h6>
                        @foreach (var filter in Enum.GetValues(typeof(Category)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="cat-@filter"
                                       name="Categories"
                                       value="@((int)filter)"
                                       @(Model.Filter.Categories != null && Model.Filter.Categories.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="cat-@filter">
                                    @EnumExtensions.GetDisplayName((Category)filter)
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">

                        <h6 class="mb-3">Brend</h6>
                        @foreach (var brand in ViewBag.ProductBrands)
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="@brand"
                                       name="Brands"
                                       value="@brand"
                                       @(Model.Filter.Brands != null && Model.Filter.Brands.Contains(brand) ? "checked" : "")>
                                <label class="form-check-label" for="@brand">
                                    @brand
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">

                        <h6 class="mb-3">Pol</h6>
                        @foreach (var filter in Enum.GetValues(typeof(Gender)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="gender-@filter"
                                       name="Genders"
                                       value="@((int)filter)"
                                       @(Model.Filter.Genders != null && Model.Filter.Genders.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="gender-@filter">
                                    @EnumExtensions.GetDisplayName((Gender)filter)
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">
                        <h6 class="mb-3">Oblik</h6>
                        @foreach (var filter in Enum.GetValues(typeof(FrameType)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="frameType-@filter"
                                       name="FrameTypes"
                                       value="@((int)filter)"
                                       @(Model.Filter.FrameTypes != null && Model.Filter.FrameTypes.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="frameType-@filter">
                                    @EnumExtensions.GetDisplayName((FrameType)filter)
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">
                        <h6 class="mb-3">Boja okvira</h6>
                        @foreach (var filter in Enum.GetValues(typeof(FrameColor)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="frameColor-@filter"
                                       name="FrameColors"
                                       value="@((int)filter)"
                                       @(Model.Filter.FrameColors != null && Model.Filter.FrameColors.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="frameColor-@filter">
                                    @EnumExtensions.GetDisplayName((FrameColor)filter)
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">
                        <h6 class="mb-3">Boja stakala</h6>
                        @foreach (var filter in Enum.GetValues(typeof(LensColor)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="lensColor-@filter"
                                       name="LensColors"
                                       value="@((int)filter)"
                                       @(Model.Filter.LensColors != null && Model.Filter.LensColors.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="lensColor-@filter">
                                    @EnumExtensions.GetDisplayName((LensColor)filter)
                                </label>
                            </div>
                        }

                    </div>

                    <div class="filter-group">
                        <h6 class="mb-3">UV Zaštita</h6>
                        @foreach (var filter in Enum.GetValues(typeof(UVProtection)))
                        {
                            <div class="form-check mb-2">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="uv-@filter"
                                       name="UVProtections"
                                       value="@((int)filter)"
                                       @(Model.Filter.UVProtections != null && Model.Filter.UVProtections.Contains((int)filter) ? "checked" : "")>
                                <label class="form-check-label" for="uv-@filter">
                                    @EnumExtensions.GetDisplayName((UVProtection)filter)
                                </label>
                            </div>
                        }

                    </div>

   
                    <div class="d-flex justify-content-center w-100">
                        <button class="btn btn-outline-primary w-50 fw-bolder">Primeni filtere</button>

                    </div>
                </form>
                    
                </div>
            </div>

         
            <div class="col-lg-9">
                <div class="row g-4">
               
                @foreach(var product in Model.Products)
                {
                    
                    <div class="col-md-4">
                        <div class="product-card shadow-sm ">
                            <div class="position-relative">
                                <a asp-controller="Customer" asp-action="ProductDetails" asp-route-id="@product.Id"><img src="@product.ImageUrl" class="product-image w-100" alt="Product"></a>
                                @if(product.Promotion != null)
                                {
                                    @switch(product.Promotion.DiscountPercentage)
                                    {
                                        case >=50:
                                            <span class="discount-badge fw-bolder">@product.Promotion.Name</span>
                                            break;
                                        case >=30:
                                            <span class="discount-badge bg-info text-secondary fw-bolder">@product.Promotion.Name</span>
                                            break;
                                        case >=20:
                                            <span class="discount-badge bg-warning text-danger fw-bolder">@product.Promotion.Name</span>
                                            break;
                                    }
                                }

                            </div>
                            <div class="p-3">
                                <span class="category-badge mb-2 d-inline-block">@product.Category!.GetDisplayName()</span>
                                <div class="mb-2 d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">@product.Name</h6>
                                        <i class="rating-stars bi bi-star-fill"></i>

                                        <span class="text-muted ms-2">
                                            @{
                                                var avgRating = product.Ratings.Any() ? product.Ratings.Average(r => r.Score) : 0;
                                            }
                                            @avgRating.ToString("0.0")
                                        </span>
                                    </div>

                                    <div class="d-flex flex-column">
                                        @{
                                            if (product.PromoPrice != null)
                                            {
                                                <span class="price text-decoration-line-through text-danger">@product.Price RSD</span>
                                                <span class="price bg-warning text-dark p-2 rounded-3 shadow">@product.PromoPrice RSD</span>
                                            }
                                            else
                                            {
                                                <span class="price text-decoration-line-through text-danger opacity-0"></span>
                                                <span class="price mt-3" id="price" value="@product.Price">@product.Price RSD</span>

                                            }
                                        }
                                    </div>
                                    
                                </div>
                                <div class="d-flex justify-content-center align-items-center ">
                                   
                                    @{
                                        if(User.IsInRole("User") && SignInManager.IsSignedIn(User))
                                        {
                                            <button class="btn cart-btn hover shadow add-to-cart-btn" 
                                                    data-product-id="@product.Id" 
                                                    data-product-name="@product.Name"
                                                    data-price="@(product.PromoPrice ?? product.Price)">
                                                <i class="bi bi-cart4"></i>
                                                Dodaj u korpu
                                            </button>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                }

                   

                </div>
            @if (Model.Products is PaginatedList<Product> paged && paged.TotalPages > 1)
            {
                <nav aria-label="Product pagination">
                    <ul class="pagination justify-content-center mt-4">
                        <li class="page-item @(paged.HasPreviousPage ? "" : "disabled") btn-warning">
                            <form method="get" asp-controller="Customer" asp-action="Index" class="d-inline">
                        
                                @foreach (var cat in Model.Filter.Categories ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="Categories" value="@cat" />
                                }
                                @foreach (var brand in Model.Filter.Brands ?? Enumerable.Empty<string>())
                                {
                                    <input type="hidden" name="Brands" value="@brand" />
                                }
                                @foreach (var gender in Model.Filter.Genders ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="Genders" value="@gender" />
                                }
                                @foreach (var frameType in Model.Filter.FrameTypes ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="FrameTypes" value="@frameType" />
                                }
                                @foreach (var frameColor in Model.Filter.FrameColors ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="FrameColors" value="@frameColor" />
                                }
                                @foreach (var lensColor in Model.Filter.LensColors ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="LensColors" value="@lensColor" />
                                }
                                @foreach (var uv in Model.Filter.UVProtections ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="UVProtections" value="@uv" />
                                }
                                <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
                                <input type="hidden" name="page" value="@(paged.PageIndex - 1)" />
                                <button class="page-link" type="submit" aria-label="Prethodna" tabindex="-1">&laquo;</button>
                            </form>
                        </li>
                        @for (int i = 1; i <= paged.TotalPages; i++)
                        {
                            <li class="page-item @(i == paged.PageIndex ? "active" : "")">
                                <form method="get" asp-controller="Customer" asp-action="Index" class="d-inline">
                                    @* Hidden filter inputs *@
                                    @foreach (var cat in Model.Filter.Categories ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="Categories" value="@cat" />
                                    }
                                    @foreach (var brand in Model.Filter.Brands ?? Enumerable.Empty<string>())
                                    {
                                        <input type="hidden" name="Brands" value="@brand" />
                                    }
                                    @foreach (var gender in Model.Filter.Genders ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="Genders" value="@gender" />
                                    }
                                    @foreach (var frameType in Model.Filter.FrameTypes ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="FrameTypes" value="@frameType" />
                                    }
                                    @foreach (var frameColor in Model.Filter.FrameColors ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="FrameColors" value="@frameColor" />
                                    }
                                    @foreach (var lensColor in Model.Filter.LensColors ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="LensColors" value="@lensColor" />
                                    }
                                    @foreach (var uv in Model.Filter.UVProtections ?? Enumerable.Empty<int>())
                                    {
                                        <input type="hidden" name="UVProtections" value="@uv" />
                                    }
                                    <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
                                    <input type="hidden" name="page" value="@i" />
                                    <button class="page-link" type="submit">@i</button>
                                </form>
                            </li>
                        }
                        <li class="page-item @(paged.HasNextPage ? "" : "disabled") ">
                            <form method="get" asp-controller="Customer" asp-action="Index" class="d-inline">
                                @* Hidden filter inputs *@
                                @foreach (var cat in Model.Filter.Categories ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="Categories" value="@cat" />
                                }
                                @foreach (var brand in Model.Filter.Brands ?? Enumerable.Empty<string>())
                                {
                                    <input type="hidden" name="Brands" value="@brand" />
                                }
                                @foreach (var gender in Model.Filter.Genders ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="Genders" value="@gender" />
                                }
                                @foreach (var frameType in Model.Filter.FrameTypes ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="FrameTypes" value="@frameType" />
                                }
                                @foreach (var frameColor in Model.Filter.FrameColors ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="FrameColors" value="@frameColor" />
                                }
                                @foreach (var lensColor in Model.Filter.LensColors ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="LensColors" value="@lensColor" />
                                }
                                @foreach (var uv in Model.Filter.UVProtections ?? Enumerable.Empty<int>())
                                {
                                    <input type="hidden" name="UVProtections" value="@uv" />
                                }
                                <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
                                <input type="hidden" name="page" value="@(paged.PageIndex + 1)" />
                                <button class="page-link" type="submit" aria-label="Sledeća">&raquo;</button>
                            </form>
                        </li>
                    </ul>
                </nav>
            }
            </div>
        </div>
    </div>
